// Code generated by protoc-gen-go. DO NOT EDIT.
// source: proto/benchmark.proto

package pb

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Message_Corpus int32

const (
	Message_UNIVERSAL Message_Corpus = 0
	Message_WEB       Message_Corpus = 1
	Message_IMAGES    Message_Corpus = 2
	Message_LOCAL     Message_Corpus = 3
	Message_NEWS      Message_Corpus = 4
	Message_PRODUCTS  Message_Corpus = 5
	Message_VIDEO     Message_Corpus = 6
)

var Message_Corpus_name = map[int32]string{
	0: "UNIVERSAL",
	1: "WEB",
	2: "IMAGES",
	3: "LOCAL",
	4: "NEWS",
	5: "PRODUCTS",
	6: "VIDEO",
}

var Message_Corpus_value = map[string]int32{
	"UNIVERSAL": 0,
	"WEB":       1,
	"IMAGES":    2,
	"LOCAL":     3,
	"NEWS":      4,
	"PRODUCTS":  5,
	"VIDEO":     6,
}

func (x Message_Corpus) String() string {
	return proto.EnumName(Message_Corpus_name, int32(x))
}

func (Message_Corpus) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_362d3b3c7bde328a, []int{0, 0}
}

type Message struct {
	Query                string         `protobuf:"bytes,1,opt,name=query,proto3" json:"query,omitempty"`
	PageNumber           int32          `protobuf:"varint,2,opt,name=page_number,json=pageNumber,proto3" json:"page_number,omitempty"`
	ResultPerPage        int32          `protobuf:"varint,3,opt,name=result_per_page,json=resultPerPage,proto3" json:"result_per_page,omitempty"`
	Comment              []byte         `protobuf:"bytes,4,opt,name=comment,proto3" json:"comment,omitempty"`
	Corpus               Message_Corpus `protobuf:"varint,5,opt,name=corpus,proto3,enum=Message_Corpus" json:"corpus,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *Message) Reset()         { *m = Message{} }
func (m *Message) String() string { return proto.CompactTextString(m) }
func (*Message) ProtoMessage()    {}
func (*Message) Descriptor() ([]byte, []int) {
	return fileDescriptor_362d3b3c7bde328a, []int{0}
}

func (m *Message) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Message.Unmarshal(m, b)
}
func (m *Message) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Message.Marshal(b, m, deterministic)
}
func (m *Message) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Message.Merge(m, src)
}
func (m *Message) XXX_Size() int {
	return xxx_messageInfo_Message.Size(m)
}
func (m *Message) XXX_DiscardUnknown() {
	xxx_messageInfo_Message.DiscardUnknown(m)
}

var xxx_messageInfo_Message proto.InternalMessageInfo

func (m *Message) GetQuery() string {
	if m != nil {
		return m.Query
	}
	return ""
}

func (m *Message) GetPageNumber() int32 {
	if m != nil {
		return m.PageNumber
	}
	return 0
}

func (m *Message) GetResultPerPage() int32 {
	if m != nil {
		return m.ResultPerPage
	}
	return 0
}

func (m *Message) GetComment() []byte {
	if m != nil {
		return m.Comment
	}
	return nil
}

func (m *Message) GetCorpus() Message_Corpus {
	if m != nil {
		return m.Corpus
	}
	return Message_UNIVERSAL
}

func init() {
	proto.RegisterEnum("Message_Corpus", Message_Corpus_name, Message_Corpus_value)
	proto.RegisterType((*Message)(nil), "Message")
}

func init() { proto.RegisterFile("proto/benchmark.proto", fileDescriptor_362d3b3c7bde328a) }

var fileDescriptor_362d3b3c7bde328a = []byte{
	// 269 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x34, 0x90, 0x4d, 0x6b, 0xb3, 0x40,
	0x14, 0x85, 0xdf, 0x89, 0x8e, 0xc6, 0xfb, 0x26, 0xcd, 0x30, 0xb4, 0x30, 0xbb, 0x4a, 0x16, 0xad,
	0x2b, 0x03, 0xed, 0xb2, 0x2b, 0x63, 0xa4, 0x08, 0x46, 0x65, 0x6c, 0x12, 0xc8, 0x46, 0x54, 0x86,
	0x14, 0x5a, 0x3f, 0x3a, 0xea, 0xa2, 0xbf, 0xa0, 0x7f, 0xbb, 0xa8, 0xe9, 0xf2, 0x79, 0xce, 0xe1,
	0x72, 0x39, 0x70, 0xd7, 0xc8, 0xba, 0xab, 0x37, 0xb9, 0xa8, 0x8a, 0xf7, 0x32, 0x93, 0x1f, 0xf6,
	0xc8, 0xeb, 0x9f, 0x19, 0xe8, 0x7b, 0xd1, 0xb6, 0xd9, 0x45, 0xd0, 0x5b, 0xc0, 0x5f, 0xbd, 0x90,
	0xdf, 0x0c, 0x99, 0xc8, 0x32, 0xf8, 0x04, 0xf4, 0x1e, 0xfe, 0x37, 0xd9, 0x45, 0xa4, 0x55, 0x5f,
	0xe6, 0x42, 0xb2, 0x99, 0x89, 0x2c, 0xcc, 0x61, 0x50, 0xe1, 0x68, 0xe8, 0x03, 0xac, 0xa4, 0x68,
	0xfb, 0xcf, 0x2e, 0x6d, 0x84, 0x4c, 0x87, 0x80, 0x29, 0x63, 0x69, 0x39, 0xe9, 0x58, 0xc8, 0x78,
	0x38, 0xcf, 0x40, 0x2f, 0xea, 0xb2, 0x14, 0x55, 0xc7, 0x54, 0x13, 0x59, 0x0b, 0xfe, 0x87, 0xf4,
	0x11, 0xb4, 0xa2, 0x96, 0x4d, 0xdf, 0x32, 0x6c, 0x22, 0xeb, 0xe6, 0x69, 0x65, 0x5f, 0x5f, 0xb2,
	0xdd, 0x51, 0xf3, 0x6b, 0xbc, 0x3e, 0x83, 0x36, 0x19, 0xba, 0x04, 0xe3, 0x10, 0xfa, 0x47, 0x8f,
	0x27, 0x4e, 0x40, 0xfe, 0x51, 0x1d, 0x94, 0x93, 0xb7, 0x25, 0x88, 0x02, 0x68, 0xfe, 0xde, 0x79,
	0xf5, 0x12, 0x32, 0xa3, 0x06, 0xe0, 0x20, 0x72, 0x9d, 0x80, 0x28, 0x74, 0x0e, 0x6a, 0xe8, 0x9d,
	0x12, 0xa2, 0xd2, 0x05, 0xcc, 0x63, 0x1e, 0xed, 0x0e, 0xee, 0x5b, 0x42, 0xf0, 0x50, 0x39, 0xfa,
	0x3b, 0x2f, 0x22, 0xda, 0x56, 0x3f, 0x63, 0x7b, 0xf3, 0xd2, 0xe4, 0xb9, 0x36, 0x2e, 0xf3, 0xfc,
	0x1b, 0x00, 0x00, 0xff, 0xff, 0x38, 0xfe, 0x81, 0x67, 0x32, 0x01, 0x00, 0x00,
}
